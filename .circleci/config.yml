defaults: &defaults
  working_directory: ~/sp-dev-fx-controls-react
  docker:
    - image: circleci/node:8.9.1

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/sp-dev-fx-controls-react
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Restore dependencies
          command: npm i
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Update version number for telemetry
          command: npm run versionUpdater
      - run:
          name: build
          command: npm run build
      - run:
          name: sonarcloud:config
          command: npm run sonarcloud:config $SONARCLOUD_TOKEN $CIRCLE_BRANCH
      - run:
          name: sonarcloud:start
          command: npm run sonarcloud:start
      - persist_to_workspace:
          root: .
          paths: .
  build_next:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/sp-dev-fx-controls-react
      - run:
          name: Stamp beta to package version
          command: node scripts/update-package-version.js $CIRCLE_SHA1
      - run:
          name: Update version number for telemetry
          command: npm run versionUpdater
      - run:
          name: build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths: .
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/sp-dev-fx-controls-react
      - run:
          name: Test
          command: npm test
      - run:
          name: Show coverage output in Circle
          command: 'cat temp/coverage/coverage.txt'
      - run:
          name: Run codevoc
          command: './node_modules/.bin/codecov -t $CODECOV_TOKEN'
          environment:
            - CODECOV_TOKEN: "83a5682f-4c9f-4ed7-9da8-ccc04416f364"
      - store_artifacts:
          path: temp/coverage
          prefix: coverage
  publish_next:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/sp-dev-fx-controls-react
      - run:
          name: Write .npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish @next
          command: npm publish --tag next --access public
  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/sp-dev-fx-controls-react
      - run:
          name: Write .npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish
          command: npm publish --access public
  deploy_docs:
    working_directory: ~/sp-dev-fx-controls-react/docs/documentation
    docker:
      - image: circleci/python:2.7-jessie-node
    steps:
      - attach_workspace:
          at: ~/sp-dev-fx-controls-react
      - add_ssh_keys:
          fingerprints:
            - "06:6f:8d:29:ab:79:c3:6a:61:85:9e:37:93:34:a9:bb"
      - run:
          name: Install MkDocs
          command: sudo pip install mkdocs
      - run:
          name: Install MkDocs theme
          command: sudo pip install mkdocs-material
      - run:
          name: Avoid hosts unknown for github
          command: echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: build docs
          command: mkdocs gh-deploy

workflows:
  version: 2
  check_pr:
    jobs:
      - build:
          filters:
            branches:
              ignore: /^(dev|master)/
      - test:
          requires:
            - build
          filters:
            branches:
              ignore: /^(dev|master)/
  release_next:
    jobs:
      - build:
          filters:
            branches:
              only: dev
      - build_next:
          requires:
            - build
          filters:
            branches:
              only: dev
      - test:
          requires:
            - build_next
          filters:
            branches:
              only: dev
      - publish_next:
          requires:
            - test
          filters:
            branches:
              only: dev
  release:
    jobs:
      - build:
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - publish:
          requires:
            - test
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - deploy_docs:
          requires:
            - publish
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
